{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/AlternativeMessage.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","wrapper_message","avatar","src","alt","name","message_wrapper","text_center","text_wrapper","message","time","block","AlternativeMessage","wrapper_alternative","text_center_alt","alt_block","messageData","alternativeData","HW1","Affair","content","x","onClick","deleteAffairCallback","affair","_id","priority","Affairs","mappedAffairs","data","map","a","key","wrapper","buttons","setFilter","all","high","middle","low","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","f","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","onKeyPress","inputClass","someClass","buttonClass","errorBtn","someClassBtn","value","onChange","spanError","GreetingContainer","users","addUserCallback","setName","setError","match","alert","length","event","target","HW3","setUsers","user","v1","SuperInputText","type","onChangeText","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","input","errorInput","superInput","e","currentTarget","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","disabled","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.fddb5669.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__Yd0bc\",\"time\":\"Message_time__3rcek\",\"name\":\"Message_name__3QKCZ\",\"text_center\":\"Message_text_center__EKZFF\",\"text_center_alt\":\"Message_text_center_alt__2PZyC\",\"wrapper_message\":\"Message_wrapper_message__2mx3x\",\"wrapper_alternative\":\"Message_wrapper_alternative__fea-K\",\"avatar\":\"Message_avatar__3Rh4F\",\"message_wrapper\":\"Message_message_wrapper__69AMB\",\"text_wrapper\":\"Message_text_wrapper__2FDtk\",\"block\":\"Message_block__3OVVb\",\"alt_block\":\"Message_alt_block__1WN4f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"affair\":\"Affairs_affair__1vyir\",\"content\":\"Affairs_content__3_hIV\",\"priority\":\"Affairs_priority__dM1bC\",\"x\":\"Affairs_x__1qgyo\",\"wrapper\":\"Affairs_wrapper__122OI\",\"all\":\"Affairs_all__1g8U2\",\"high\":\"Affairs_high__1pzzq\",\"middle\":\"Affairs_middle__29qBE\",\"low\":\"Affairs_low__-t9nH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__3DyKm\",\"error\":\"Greeting_error__qO48L\",\"spanError\":\"Greeting_spanError__3mWtT\",\"errorBtn\":\"Greeting_errorBtn__3Z0WY\",\"someClassBtn\":\"Greeting_someClassBtn__2VSza\",\"totalUsers\":\"Greeting_totalUsers__1ws65\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__WrH8o\",\"input\":\"SuperInputText_input__3-KcN\",\"errorInput\":\"SuperInputText_errorInput__symn3\",\"error\":\"SuperInputText_error__1Qu9E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__38ReN\",\"column\":\"HW4_column__24kTf\",\"testSpanError\":\"HW4_testSpanError__1eRe1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2o18U\",\"red\":\"SuperButton_red__3ysA-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SuperCheckbox_label__2uO6k\",\"checkbox\":\"SuperCheckbox_checkbox__1apai\",\"spanClassName\":\"SuperCheckbox_spanClassName__2bvP7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__LViBy\"};","import React from \"react\";\nimport s from \"./Message.module.css\";\n\ntype propsTypes = {\n  avatar: string;\n  name: string;\n  message: string;\n  time: string;\n};\n\nexport const Message = (props: propsTypes) => {\n  return (\n    <div className={s.wrapper_message}>\n      <img className={s.avatar} src={props.avatar} alt={props.name} />\n\n      <div className={s.message_wrapper}>\n        <div className={s.text_center}>\n          <div className={s.name}>{props.name}</div>\n          <div className={s.text_wrapper}>\n            <div className={s.message}>{props.message}</div>\n            <span className={s.time}>{props.time}</span>\n            <div className={s.block}></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport s from \"./Message.module.css\";\n\ntype propsTypes = {\n  avatar: string;\n  name: string;\n  message: string;\n  time: string;\n};\n\nexport const AlternativeMessage = (props: propsTypes) => {\n  return (\n    <div className={s.wrapper_alternative}>\n      <div className={s.message_wrapper}>\n        <div className={s.text_center_alt}>\n          <div className={s.name}>{props.name}</div>\n          <div className={s.text_wrapper}>\n            <div className={s.message}>{props.message}</div>\n            <span className={s.time}>{props.time}</span>\n            <div className={s.alt_block}></div>\n          </div>\n        </div>\n      </div>\n      <img className={s.avatar} src={props.avatar} alt={props.name} />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Message } from \"./Message\";\nimport { AlternativeMessage } from \"./AlternativeMessage\";\n\nconst messageData = {\n  avatar:\n    \"https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg\",\n  name: \"Max\",\n  message: \"hi my name max!\",\n  time: \"22:00\",\n};\nconst alternativeData = {\n  avatar:\n    \"https://cdnb.artstation.com/p/assets/images/images/008/802/747/large/anton-chernoskutov-5.jpg?1515414305\",\n  name: \"Piter\",\n  message: \"Hi\",\n  time: \"22:05\",\n};\n\nfunction HW1() {\n  return (\n    <div>\n      <hr />\n      homeworks 1\n      <Message\n        avatar={messageData.avatar}\n        name={messageData.name}\n        message={messageData.message}\n        time={messageData.time}\n      />\n      <hr />\n      <AlternativeMessage\n        avatar={alternativeData.avatar}\n        name={alternativeData.name}\n        message={alternativeData.message}\n        time={alternativeData.time}\n      />\n      <hr />\n    </div>\n  );\n}\n\nexport default HW1;\n","import React from \"react\";\nimport { AffairType } from \"./HW2\";\nimport s from \"./Affairs.module.css\";\n\ntype AffairPropsType = {\n  // key не нужно типизировать\n  affair: AffairType; // need to fix any\n  deleteAffairCallback: (_id: number) => void; // need to fix any\n};\n\nfunction Affair(props: AffairPropsType) {\n  const deleteCallback = () => {\n    props.deleteAffairCallback(props.affair._id);\n  }; // need to fix\n\n  return (\n    <div className={s.content}>\n      <button className={s.x} onClick={deleteCallback}>\n        X\n      </button>\n      <span className={s.affair}>{props.affair.name}</span>\n      <span className={s.priority}>{props.affair.priority}</span>\n    </div>\n  );\n}\n\nexport default Affair;\n","import React from \"react\";\nimport Affair from \"./Affair\";\nimport { AffairType, FilterType } from \"./HW2\";\nimport s from \"./Affairs.module.css\";\n\ntype AffairsPropsType = {\n  // need to fix any\n  data: AffairType[];\n  setFilter: (filter: FilterType) => void;\n  deleteAffairCallback: (_id: number) => void;\n};\n\nfunction Affairs(props: AffairsPropsType) {\n  const mappedAffairs = props.data.map((a: AffairType) => (\n    <Affair // should work\n      key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n      affair={a}\n      deleteAffairCallback={props.deleteAffairCallback}\n    />\n  ));\n\n  const setAll = () => {\n    props.setFilter(\"all\");\n  }; // need to fix\n  const setHigh = () => {\n    props.setFilter(\"high\");\n  };\n  const setMiddle = () => {\n    props.setFilter(\"middle\");\n  };\n  const setLow = () => {\n    props.setFilter(\"low\");\n  };\n\n  return (\n    <div className={s.wrapper}>\n      {mappedAffairs}\n      <div className={s.buttons}>\n        <button onClick={setAll} className={s.all}>\n          All\n        </button>\n        <button onClick={setHigh} className={s.high}>\n          High\n        </button>\n        <button onClick={setMiddle} className={s.middle}>\n          Middle\n        </button>\n        <button onClick={setLow} className={s.low}>\n          Low\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Affairs;\n","import React, { useState } from \"react\";\nimport Affairs from \"./Affairs\";\n\n// types\nexport type AffairPriorityType = \"high\" | \"low\" | \"middle\";\nexport type AffairType = {\n  _id: number;\n  name: string;\n  priority: AffairPriorityType;\n};\nexport type FilterType = \"all\" | AffairPriorityType;\n\n// constants\nconst defaultAffairs: AffairType[] = [\n  // need to fix any\n  { _id: 1, name: \"React\", priority: \"high\" },\n  { _id: 2, name: \"anime\", priority: \"low\" },\n  { _id: 3, name: \"games\", priority: \"low\" },\n  { _id: 4, name: \"work\", priority: \"high\" },\n  { _id: 5, name: \"html & css\", priority: \"middle\" },\n];\n\n// pure helper functions\nexport const filterAffairs = (\n  affairs: AffairType[],\n  filter: FilterType\n): AffairType[] => {\n  // need to fix any\n  if (filter === \"all\") return affairs;\n  if (filter === \"low\") return affairs.filter((f) => f.priority === \"low\");\n  if (filter === \"high\") return affairs.filter((f) => f.priority === \"high\");\n  if (filter === \"middle\")\n    return affairs.filter((f) => f.priority === \"middle\");\n  else return affairs;\n};\nexport const deleteAffair = (affairs: AffairType[], _id: number): any => {\n  // need to fix any\n  return affairs.filter((f) => f._id !== _id);\n};\n\nfunction HW2() {\n  const [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs); // need to fix any\n  const [filter, setFilter] = useState<FilterType>(\"all\");\n\n  const filteredAffairs = filterAffairs(affairs, filter);\n  const deleteAffairCallback = (_id: number) =>\n    setAffairs(deleteAffair(affairs, _id)); // need to fix any\n\n  return (\n    <div>\n      <hr />\n      homeworks 2{/*should work (должно работать)*/}\n      <Affairs\n        data={filteredAffairs}\n        setFilter={setFilter}\n        deleteAffairCallback={deleteAffairCallback}\n      />\n      <hr />\n      {/*для личного творчества, могу проверить*/}\n      {/*<AlternativeAffairs/>*/}\n      <hr />\n    </div>\n  );\n}\n\nexport default HW2;\n","import React, { ChangeEvent, KeyboardEvent } from \"react\";\nimport s from \"./Greeting.module.css\";\n\ntype GreetingPropsType = {\n  name: string; // need to fix any\n  setNameCallback: (event: ChangeEvent<HTMLInputElement>) => void; // need to fix any\n  addUser: () => void; // need to fix any\n  error: string; // need to fix any\n  totalUsers: number; // need to fix any\n  onKeyPress: (event: KeyboardEvent<HTMLInputElement>) => void;\n};\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n  { name, setNameCallback, addUser, error, totalUsers, onKeyPress } // деструктуризация пропсов\n) => {\n  const inputClass = error ? s.error : s.someClass; // need to fix with (?:)\n  const buttonClass = error ? s.errorBtn : s.someClassBtn; // need to fix with (?:)\n\n  return (\n    <div>\n      <input\n        value={name}\n        onChange={setNameCallback}\n        onKeyPress={onKeyPress}\n        className={inputClass}\n      />\n      <button className={buttonClass} onClick={addUser}>\n        add\n      </button>\n      <span className={s.totalUsers}>{totalUsers}</span>\n      <div className={s.spanError}>{error}</div>\n    </div>\n  );\n};\n\nexport default Greeting;\n","import React, { useState, ChangeEvent, KeyboardEvent } from \"react\";\nimport Greeting from \"./Greeting\";\nimport { UserType } from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n  users: UserType[]; // need to fix any\n  addUserCallback: (name: string) => void; // need to fix any\n};\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({\n  users,\n  addUserCallback,\n}) => {\n  // деструктуризация пропсов\n  const [name, setName] = useState<string>(\"\"); // need to fix any\n  const [error, setError] = useState<string>(\"\"); // need to fix any\n\n  const setNameCallback = (event: ChangeEvent<HTMLInputElement>) => {\n    // need to fix any\n    setName(event.target.value);\n  };\n  const onKeyPress = (event: KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === \"Enter\") {\n      addUser();\n    }\n  };\n\n  const addUser = () => {\n    if (name.match(/^[a-zа-яё\\s]+$/iu) && name !== \"\" && name !== \" \") {\n      alert(`Hello ${name}!`); // need to fix\n      addUserCallback(name);\n      setName(\"\");\n      setError(\"\");\n    } else {\n      setError(\"Error\");\n    }\n  };\n\n  const totalUsers = users.length; // need to fix\n\n  return (\n    <Greeting\n      name={name}\n      setNameCallback={setNameCallback}\n      addUser={addUser}\n      error={error}\n      totalUsers={totalUsers}\n      onKeyPress={onKeyPress}\n    />\n  );\n};\n\nexport default GreetingContainer;\n","import React, { useState } from \"react\";\nimport GreetingContainer from \"./GreetingContainer\";\nimport { v1 } from \"uuid\";\n\n// types\nexport type UserType = {\n  _id: string; // need to fix any\n  name: string; // need to fix any\n};\n\n// уровень работы с глобальными данными\nfunction HW3() {\n  const [users, setUsers] = useState<UserType[]>([]); // need to fix any\n\n  const addUserCallback = (name: string) => {\n    // need to fix any\n    const user = {\n      _id: v1(),\n      name: name,\n    };\n    setUsers([...users, user]); // need to fix\n  };\n\n  return (\n    <div>\n      <hr />\n      homeworks 3{/*should work (должно работать)*/}\n      <GreetingContainer users={users} addUserCallback={addUserCallback} />\n      <hr />\n      {/*для личного творчества, могу проверить*/}\n      {/*<AlternativeGreeting/>*/}\n      <hr />\n    </div>\n  );\n}\n\nexport default HW3;\n","import React, {\n  ChangeEvent,\n  DetailedHTMLProps,\n  InputHTMLAttributes,\n  KeyboardEvent,\n} from \"react\";\nimport s from \"./SuperInputText.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<\n  InputHTMLAttributes<HTMLInputElement>,\n  HTMLInputElement\n>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & {\n  // и + ещё пропсы которых нет в стандартном инпуте\n  onChangeText?: (value: string) => void;\n  onEnter?: () => void;\n  error?: string;\n  spanClassName?: string;\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = ({\n  type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n  onChange,\n  onChangeText,\n  onKeyPress,\n  onEnter,\n  error,\n  className,\n  spanClassName,\n\n  ...restProps // все остальные пропсы попадут в объект restProps\n}) => {\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n    onChange && // если есть пропс onChange\n      onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n    onChangeText && onChangeText(e.currentTarget.value);\n  };\n  const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n    onKeyPress && onKeyPress(e);\n\n    onEnter && // если есть пропс onEnter\n      e.key === \"Enter\" && // и если нажата кнопка Enter\n      onEnter(); // то вызвать его\n  };\n\n  const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n  const finalInputClassName = `${s.input} ${\n    error ? s.errorInput : s.superInput\n  }`; // need to fix with (?:) and s.superInput\n\n  return (\n    <>\n      <input\n        type={\"text\"}\n        onChange={onChangeCallback}\n        onKeyPress={onKeyPressCallback}\n        className={finalInputClassName}\n        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n      />\n      {error && <span className={finalSpanClassName}>{error}</span>}\n    </>\n  );\n};\n\nexport default SuperInputText;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {\n  ChangeEvent,\n  DetailedHTMLProps,\n  InputHTMLAttributes,\n} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<\n  InputHTMLAttributes<HTMLInputElement>,\n  HTMLInputElement\n>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n  onChangeChecked?: (checked: boolean) => void;\n  spanClassName?: string;\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = ({\n  type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n  onChange,\n  onChangeChecked,\n  className,\n  spanClassName,\n  children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n  ...restProps // все остальные пропсы попадут в объект restProps\n}) => {\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n    // сделайте так чтоб работал onChange и onChangeChecked\n    if (onChangeChecked) {\n      onChangeChecked(e.currentTarget.checked);\n    }\n    if (onChange) {\n      onChange(e);\n    }\n  };\n\n  const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n  return (\n    <label>\n      <input\n        type={\"checkbox\"}\n        onChange={onChangeCallback}\n        className={finalInputClassName}\n        {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n      />\n      {children && <span className={s.spanClassName}>{children}</span>}\n    </label> // благодаря label нажатие на спан передастся в инпут\n  );\n};\n\nexport default SuperCheckbox;\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from '../../../p2-homeworks/h3/HW3';\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            {/*<HW5/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}